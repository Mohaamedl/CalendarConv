{
  "version": 3,
  "sources": ["../../node_modules/path2d/dist/index.js"],
  "sourcesContent": ["// src/parse-path.ts\nvar ARG_LENGTH = {\n  a: 7,\n  c: 6,\n  h: 1,\n  l: 2,\n  m: 2,\n  q: 4,\n  s: 4,\n  t: 2,\n  v: 1,\n  z: 0\n};\nvar SEGMENT_PATTERN = /([astvzqmhlc])([^astvzqmhlc]*)/gi;\nvar NUMBER = /-?[0-9]*\\.?[0-9]+(?:e[-+]?\\d+)?/gi;\nfunction parseValues(args) {\n  const numbers = args.match(NUMBER);\n  return numbers ? numbers.map(Number) : [];\n}\nfunction parsePath(path) {\n  const data = [];\n  const p = String(path).trim();\n  if (p[0] !== \"M\" && p[0] !== \"m\") {\n    return data;\n  }\n  p.replace(SEGMENT_PATTERN, (_, command, args) => {\n    const theArgs = parseValues(args);\n    let type = command.toLowerCase();\n    let theCommand = command;\n    if (type === \"m\" && theArgs.length > 2) {\n      data.push([theCommand, ...theArgs.splice(0, 2)]);\n      type = \"l\";\n      theCommand = theCommand === \"m\" ? \"l\" : \"L\";\n    }\n    if (theArgs.length < ARG_LENGTH[type]) {\n      return \"\";\n    }\n    data.push([theCommand, ...theArgs.splice(0, ARG_LENGTH[type])]);\n    while (theArgs.length >= ARG_LENGTH[type] && theArgs.length && ARG_LENGTH[type]) {\n      data.push([theCommand, ...theArgs.splice(0, ARG_LENGTH[type])]);\n    }\n    return \"\";\n  });\n  return data;\n}\n\n// src/path2d.ts\nfunction rotatePoint(point, angle) {\n  const nx = point.x * Math.cos(angle) - point.y * Math.sin(angle);\n  const ny = point.y * Math.cos(angle) + point.x * Math.sin(angle);\n  point.x = nx;\n  point.y = ny;\n}\nfunction translatePoint(point, dx, dy) {\n  point.x += dx;\n  point.y += dy;\n}\nfunction scalePoint(point, s) {\n  point.x *= s;\n  point.y *= s;\n}\nvar Path2D = class _Path2D {\n  constructor(path) {\n    this.commands = [];\n    if (path && path instanceof _Path2D) {\n      this.commands.push(...path.commands);\n    } else if (path) {\n      this.commands = parsePath(path);\n    }\n  }\n  addPath(path) {\n    if (path && path instanceof _Path2D) {\n      this.commands.push(...path.commands);\n    }\n  }\n  moveTo(x, y) {\n    this.commands.push([\"M\", x, y]);\n  }\n  lineTo(x, y) {\n    this.commands.push([\"L\", x, y]);\n  }\n  arc(x, y, r, start, end, ccw) {\n    this.commands.push([\"AC\", x, y, r, start, end, !!ccw]);\n  }\n  arcTo(x1, y1, x2, y2, r) {\n    this.commands.push([\"AT\", x1, y1, x2, y2, r]);\n  }\n  ellipse(x, y, rx, ry, angle, start, end, ccw) {\n    this.commands.push([\"E\", x, y, rx, ry, angle, start, end, !!ccw]);\n  }\n  closePath() {\n    this.commands.push([\"Z\"]);\n  }\n  bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y) {\n    this.commands.push([\"C\", cp1x, cp1y, cp2x, cp2y, x, y]);\n  }\n  quadraticCurveTo(cpx, cpy, x, y) {\n    this.commands.push([\"Q\", cpx, cpy, x, y]);\n  }\n  rect(x, y, width, height) {\n    this.commands.push([\"R\", x, y, width, height]);\n  }\n  roundRect(x, y, width, height, radii) {\n    if (typeof radii === \"undefined\") {\n      this.commands.push([\"RR\", x, y, width, height, 0]);\n    } else {\n      this.commands.push([\"RR\", x, y, width, height, radii]);\n    }\n  }\n};\nfunction buildPath(ctx, commands) {\n  let x = 0;\n  let y = 0;\n  let endAngle;\n  let startAngle;\n  let largeArcFlag;\n  let sweepFlag;\n  let endPoint;\n  let midPoint;\n  let angle;\n  let lambda;\n  let t1;\n  let t2;\n  let x1;\n  let y1;\n  let r;\n  let rx;\n  let ry;\n  let w;\n  let h;\n  let pathType;\n  let centerPoint;\n  let ccw;\n  let radii;\n  let cpx = null;\n  let cpy = null;\n  let qcpx = null;\n  let qcpy = null;\n  let startPoint = null;\n  let currentPoint = null;\n  ctx.beginPath();\n  for (let i = 0; i < commands.length; ++i) {\n    pathType = commands[i][0];\n    if (pathType !== \"S\" && pathType !== \"s\" && pathType !== \"C\" && pathType !== \"c\") {\n      cpx = null;\n      cpy = null;\n    }\n    if (pathType !== \"T\" && pathType !== \"t\" && pathType !== \"Q\" && pathType !== \"q\") {\n      qcpx = null;\n      qcpy = null;\n    }\n    let c;\n    switch (pathType) {\n      case \"m\":\n      case \"M\":\n        c = commands[i];\n        if (pathType === \"m\") {\n          x += c[1];\n          y += c[2];\n        } else {\n          x = c[1];\n          y = c[2];\n        }\n        if (pathType === \"M\" || !startPoint) {\n          startPoint = { x, y };\n        }\n        ctx.moveTo(x, y);\n        break;\n      case \"l\":\n        c = commands[i];\n        x += c[1];\n        y += c[2];\n        ctx.lineTo(x, y);\n        break;\n      case \"L\":\n        c = commands[i];\n        x = c[1];\n        y = c[2];\n        ctx.lineTo(x, y);\n        break;\n      case \"H\":\n        c = commands[i];\n        x = c[1];\n        ctx.lineTo(x, y);\n        break;\n      case \"h\":\n        c = commands[i];\n        x += c[1];\n        ctx.lineTo(x, y);\n        break;\n      case \"V\":\n        c = commands[i];\n        y = c[1];\n        ctx.lineTo(x, y);\n        break;\n      case \"v\":\n        c = commands[i];\n        y += c[1];\n        ctx.lineTo(x, y);\n        break;\n      case \"a\":\n      case \"A\":\n        c = commands[i];\n        if (currentPoint === null) {\n          throw new Error(\"This should never happen\");\n        }\n        if (pathType === \"a\") {\n          x += c[6];\n          y += c[7];\n        } else {\n          x = c[6];\n          y = c[7];\n        }\n        rx = c[1];\n        ry = c[2];\n        angle = c[3] * Math.PI / 180;\n        largeArcFlag = !!c[4];\n        sweepFlag = !!c[5];\n        endPoint = { x, y };\n        midPoint = {\n          x: (currentPoint.x - endPoint.x) / 2,\n          y: (currentPoint.y - endPoint.y) / 2\n        };\n        rotatePoint(midPoint, -angle);\n        lambda = midPoint.x * midPoint.x / (rx * rx) + midPoint.y * midPoint.y / (ry * ry);\n        if (lambda > 1) {\n          lambda = Math.sqrt(lambda);\n          rx *= lambda;\n          ry *= lambda;\n        }\n        centerPoint = {\n          x: rx * midPoint.y / ry,\n          y: -(ry * midPoint.x) / rx\n        };\n        t1 = rx * rx * ry * ry;\n        t2 = rx * rx * midPoint.y * midPoint.y + ry * ry * midPoint.x * midPoint.x;\n        if (sweepFlag !== largeArcFlag) {\n          scalePoint(centerPoint, Math.sqrt((t1 - t2) / t2) || 0);\n        } else {\n          scalePoint(centerPoint, -Math.sqrt((t1 - t2) / t2) || 0);\n        }\n        startAngle = Math.atan2((midPoint.y - centerPoint.y) / ry, (midPoint.x - centerPoint.x) / rx);\n        endAngle = Math.atan2(-(midPoint.y + centerPoint.y) / ry, -(midPoint.x + centerPoint.x) / rx);\n        rotatePoint(centerPoint, angle);\n        translatePoint(centerPoint, (endPoint.x + currentPoint.x) / 2, (endPoint.y + currentPoint.y) / 2);\n        ctx.save();\n        ctx.translate(centerPoint.x, centerPoint.y);\n        ctx.rotate(angle);\n        ctx.scale(rx, ry);\n        ctx.arc(0, 0, 1, startAngle, endAngle, !sweepFlag);\n        ctx.restore();\n        break;\n      case \"C\":\n        c = commands[i];\n        cpx = c[3];\n        cpy = c[4];\n        x = c[5];\n        y = c[6];\n        ctx.bezierCurveTo(c[1], c[2], cpx, cpy, x, y);\n        break;\n      case \"c\":\n        c = commands[i];\n        ctx.bezierCurveTo(c[1] + x, c[2] + y, c[3] + x, c[4] + y, c[5] + x, c[6] + y);\n        cpx = c[3] + x;\n        cpy = c[4] + y;\n        x += c[5];\n        y += c[6];\n        break;\n      case \"S\":\n        c = commands[i];\n        if (cpx === null || cpy === null) {\n          cpx = x;\n          cpy = y;\n        }\n        ctx.bezierCurveTo(2 * x - cpx, 2 * y - cpy, c[1], c[2], c[3], c[4]);\n        cpx = c[1];\n        cpy = c[2];\n        x = c[3];\n        y = c[4];\n        break;\n      case \"s\":\n        c = commands[i];\n        if (cpx === null || cpy === null) {\n          cpx = x;\n          cpy = y;\n        }\n        ctx.bezierCurveTo(2 * x - cpx, 2 * y - cpy, c[1] + x, c[2] + y, c[3] + x, c[4] + y);\n        cpx = c[1] + x;\n        cpy = c[2] + y;\n        x += c[3];\n        y += c[4];\n        break;\n      case \"Q\":\n        c = commands[i];\n        qcpx = c[1];\n        qcpy = c[2];\n        x = c[3];\n        y = c[4];\n        ctx.quadraticCurveTo(qcpx, qcpy, x, y);\n        break;\n      case \"q\":\n        c = commands[i];\n        qcpx = c[1] + x;\n        qcpy = c[2] + y;\n        x += c[3];\n        y += c[4];\n        ctx.quadraticCurveTo(qcpx, qcpy, x, y);\n        break;\n      case \"T\":\n        c = commands[i];\n        if (qcpx === null || qcpy === null) {\n          qcpx = x;\n          qcpy = y;\n        }\n        qcpx = 2 * x - qcpx;\n        qcpy = 2 * y - qcpy;\n        x = c[1];\n        y = c[2];\n        ctx.quadraticCurveTo(qcpx, qcpy, x, y);\n        break;\n      case \"t\":\n        c = commands[i];\n        if (qcpx === null || qcpy === null) {\n          qcpx = x;\n          qcpy = y;\n        }\n        qcpx = 2 * x - qcpx;\n        qcpy = 2 * y - qcpy;\n        x += c[1];\n        y += c[2];\n        ctx.quadraticCurveTo(qcpx, qcpy, x, y);\n        break;\n      case \"z\":\n      case \"Z\":\n        if (startPoint) {\n          x = startPoint.x;\n          y = startPoint.y;\n        }\n        startPoint = null;\n        ctx.closePath();\n        break;\n      case \"AC\":\n        c = commands[i];\n        x = c[1];\n        y = c[2];\n        r = c[3];\n        startAngle = c[4];\n        endAngle = c[5];\n        ccw = c[6];\n        ctx.arc(x, y, r, startAngle, endAngle, ccw);\n        break;\n      case \"AT\":\n        c = commands[i];\n        x1 = c[1];\n        y1 = c[2];\n        x = c[3];\n        y = c[4];\n        r = c[5];\n        ctx.arcTo(x1, y1, x, y, r);\n        break;\n      case \"E\":\n        c = commands[i];\n        x = c[1];\n        y = c[2];\n        rx = c[3];\n        ry = c[4];\n        angle = c[5];\n        startAngle = c[6];\n        endAngle = c[7];\n        ccw = c[8];\n        ctx.save();\n        ctx.translate(x, y);\n        ctx.rotate(angle);\n        ctx.scale(rx, ry);\n        ctx.arc(0, 0, 1, startAngle, endAngle, ccw);\n        ctx.restore();\n        break;\n      case \"R\":\n        c = commands[i];\n        x = c[1];\n        y = c[2];\n        w = c[3];\n        h = c[4];\n        startPoint = { x, y };\n        ctx.rect(x, y, w, h);\n        break;\n      case \"RR\":\n        c = commands[i];\n        x = c[1];\n        y = c[2];\n        w = c[3];\n        h = c[4];\n        radii = c[5];\n        startPoint = { x, y };\n        ctx.roundRect(x, y, w, h, radii);\n        break;\n      default:\n        throw new Error(`Invalid path command: ${pathType}`);\n    }\n    if (!currentPoint) {\n      currentPoint = { x, y };\n    } else {\n      currentPoint.x = x;\n      currentPoint.y = y;\n    }\n  }\n}\n\n// src/round-rect.ts\nfunction roundRect(x, y, width, height, radii = 0) {\n  if (typeof radii === \"number\") {\n    radii = [radii];\n  }\n  if (Array.isArray(radii)) {\n    if (radii.length === 0 || radii.length > 4) {\n      throw new RangeError(\n        `Failed to execute 'roundRect' on '${this.constructor.name}': ${radii.length} radii provided. Between one and four radii are necessary.`\n      );\n    }\n    radii.forEach((v) => {\n      if (v < 0) {\n        throw new RangeError(\n          `Failed to execute 'roundRect' on '${this.constructor.name}': Radius value ${v} is negative.`\n        );\n      }\n    });\n  } else {\n    return;\n  }\n  if (radii.length === 1 && radii[0] === 0) {\n    this.rect(x, y, width, height);\n    return;\n  }\n  const minRadius = Math.min(width, height) / 2;\n  const tl = Math.min(minRadius, radii[0]);\n  let tr = tl;\n  let br = tl;\n  let bl = tl;\n  if (radii.length === 2) {\n    tr = Math.min(minRadius, radii[1]);\n    bl = tr;\n  }\n  if (radii.length === 3) {\n    tr = Math.min(minRadius, radii[1]);\n    bl = tr;\n    br = Math.min(minRadius, radii[2]);\n  }\n  if (radii.length === 4) {\n    tr = Math.min(minRadius, radii[1]);\n    br = Math.min(minRadius, radii[2]);\n    bl = Math.min(minRadius, radii[3]);\n  }\n  this.moveTo(x, y + height - bl);\n  this.arcTo(x, y, x + tl, y, tl);\n  this.arcTo(x + width, y, x + width, y + tr, tr);\n  this.arcTo(x + width, y + height, x + width - br, y + height, br);\n  this.arcTo(x, y + height, x, y + height - bl, bl);\n  this.moveTo(x, y);\n}\n\n// src/apply.ts\nfunction applyPath2DToCanvasRenderingContext(CanvasRenderingContext2D) {\n  if (!CanvasRenderingContext2D) return;\n  const cClip = CanvasRenderingContext2D.prototype.clip;\n  const cFill = CanvasRenderingContext2D.prototype.fill;\n  const cStroke = CanvasRenderingContext2D.prototype.stroke;\n  const cIsPointInPath = CanvasRenderingContext2D.prototype.isPointInPath;\n  CanvasRenderingContext2D.prototype.clip = function clip(...args) {\n    if (args[0] instanceof Path2D) {\n      const path = args[0];\n      const fillRule2 = args[1] || \"nonzero\";\n      buildPath(this, path.commands);\n      return cClip.apply(this, [fillRule2]);\n    }\n    const fillRule = args[0] || \"nonzero\";\n    return cClip.apply(this, [fillRule]);\n  };\n  CanvasRenderingContext2D.prototype.fill = function fill(...args) {\n    if (args[0] instanceof Path2D) {\n      const path = args[0];\n      const fillRule2 = args[1] || \"nonzero\";\n      buildPath(this, path.commands);\n      return cFill.apply(this, [fillRule2]);\n    }\n    const fillRule = args[0] || \"nonzero\";\n    return cFill.apply(this, [fillRule]);\n  };\n  CanvasRenderingContext2D.prototype.stroke = function stroke(path) {\n    if (path) {\n      buildPath(this, path.commands);\n    }\n    cStroke.apply(this);\n  };\n  CanvasRenderingContext2D.prototype.isPointInPath = function isPointInPath(...args) {\n    if (args[0] instanceof Path2D) {\n      const path = args[0];\n      const x = args[1];\n      const y = args[2];\n      const fillRule = args[3] || \"nonzero\";\n      buildPath(this, path.commands);\n      return cIsPointInPath.apply(this, [x, y, fillRule]);\n    }\n    return cIsPointInPath.apply(this, args);\n  };\n}\nfunction applyRoundRectToCanvasRenderingContext2D(CanvasRenderingContext2D) {\n  if (CanvasRenderingContext2D && !CanvasRenderingContext2D.prototype.roundRect) {\n    CanvasRenderingContext2D.prototype.roundRect = roundRect;\n  }\n}\nfunction applyRoundRectToPath2D(P2D) {\n  if (P2D && !P2D.prototype.roundRect) {\n    P2D.prototype.roundRect = roundRect;\n  }\n}\nexport {\n  Path2D,\n  applyPath2DToCanvasRenderingContext,\n  applyRoundRectToCanvasRenderingContext2D,\n  applyRoundRectToPath2D,\n  buildPath,\n  parsePath,\n  roundRect\n};\n"],
  "mappings": ";;;AACA,IAAI,aAAa;AAAA,EACf,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AACL;AACA,IAAI,kBAAkB;AACtB,IAAI,SAAS;AACb,SAAS,YAAY,MAAM;AACzB,QAAM,UAAU,KAAK,MAAM,MAAM;AACjC,SAAO,UAAU,QAAQ,IAAI,MAAM,IAAI,CAAC;AAC1C;AACA,SAAS,UAAU,MAAM;AACvB,QAAM,OAAO,CAAC;AACd,QAAM,IAAI,OAAO,IAAI,EAAE,KAAK;AAC5B,MAAI,EAAE,CAAC,MAAM,OAAO,EAAE,CAAC,MAAM,KAAK;AAChC,WAAO;AAAA,EACT;AACA,IAAE,QAAQ,iBAAiB,CAAC,GAAG,SAAS,SAAS;AAC/C,UAAM,UAAU,YAAY,IAAI;AAChC,QAAI,OAAO,QAAQ,YAAY;AAC/B,QAAI,aAAa;AACjB,QAAI,SAAS,OAAO,QAAQ,SAAS,GAAG;AACtC,WAAK,KAAK,CAAC,YAAY,GAAG,QAAQ,OAAO,GAAG,CAAC,CAAC,CAAC;AAC/C,aAAO;AACP,mBAAa,eAAe,MAAM,MAAM;AAAA,IAC1C;AACA,QAAI,QAAQ,SAAS,WAAW,IAAI,GAAG;AACrC,aAAO;AAAA,IACT;AACA,SAAK,KAAK,CAAC,YAAY,GAAG,QAAQ,OAAO,GAAG,WAAW,IAAI,CAAC,CAAC,CAAC;AAC9D,WAAO,QAAQ,UAAU,WAAW,IAAI,KAAK,QAAQ,UAAU,WAAW,IAAI,GAAG;AAC/E,WAAK,KAAK,CAAC,YAAY,GAAG,QAAQ,OAAO,GAAG,WAAW,IAAI,CAAC,CAAC,CAAC;AAAA,IAChE;AACA,WAAO;AAAA,EACT,CAAC;AACD,SAAO;AACT;AAGA,SAAS,YAAY,OAAO,OAAO;AACjC,QAAM,KAAK,MAAM,IAAI,KAAK,IAAI,KAAK,IAAI,MAAM,IAAI,KAAK,IAAI,KAAK;AAC/D,QAAM,KAAK,MAAM,IAAI,KAAK,IAAI,KAAK,IAAI,MAAM,IAAI,KAAK,IAAI,KAAK;AAC/D,QAAM,IAAI;AACV,QAAM,IAAI;AACZ;AACA,SAAS,eAAe,OAAO,IAAI,IAAI;AACrC,QAAM,KAAK;AACX,QAAM,KAAK;AACb;AACA,SAAS,WAAW,OAAO,GAAG;AAC5B,QAAM,KAAK;AACX,QAAM,KAAK;AACb;AACA,IAAI,SAAS,MAAM,QAAQ;AAAA,EACzB,YAAY,MAAM;AAChB,SAAK,WAAW,CAAC;AACjB,QAAI,QAAQ,gBAAgB,SAAS;AACnC,WAAK,SAAS,KAAK,GAAG,KAAK,QAAQ;AAAA,IACrC,WAAW,MAAM;AACf,WAAK,WAAW,UAAU,IAAI;AAAA,IAChC;AAAA,EACF;AAAA,EACA,QAAQ,MAAM;AACZ,QAAI,QAAQ,gBAAgB,SAAS;AACnC,WAAK,SAAS,KAAK,GAAG,KAAK,QAAQ;AAAA,IACrC;AAAA,EACF;AAAA,EACA,OAAO,GAAG,GAAG;AACX,SAAK,SAAS,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC;AAAA,EAChC;AAAA,EACA,OAAO,GAAG,GAAG;AACX,SAAK,SAAS,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC;AAAA,EAChC;AAAA,EACA,IAAI,GAAG,GAAG,GAAG,OAAO,KAAK,KAAK;AAC5B,SAAK,SAAS,KAAK,CAAC,MAAM,GAAG,GAAG,GAAG,OAAO,KAAK,CAAC,CAAC,GAAG,CAAC;AAAA,EACvD;AAAA,EACA,MAAM,IAAI,IAAI,IAAI,IAAI,GAAG;AACvB,SAAK,SAAS,KAAK,CAAC,MAAM,IAAI,IAAI,IAAI,IAAI,CAAC,CAAC;AAAA,EAC9C;AAAA,EACA,QAAQ,GAAG,GAAG,IAAI,IAAI,OAAO,OAAO,KAAK,KAAK;AAC5C,SAAK,SAAS,KAAK,CAAC,KAAK,GAAG,GAAG,IAAI,IAAI,OAAO,OAAO,KAAK,CAAC,CAAC,GAAG,CAAC;AAAA,EAClE;AAAA,EACA,YAAY;AACV,SAAK,SAAS,KAAK,CAAC,GAAG,CAAC;AAAA,EAC1B;AAAA,EACA,cAAc,MAAM,MAAM,MAAM,MAAM,GAAG,GAAG;AAC1C,SAAK,SAAS,KAAK,CAAC,KAAK,MAAM,MAAM,MAAM,MAAM,GAAG,CAAC,CAAC;AAAA,EACxD;AAAA,EACA,iBAAiB,KAAK,KAAK,GAAG,GAAG;AAC/B,SAAK,SAAS,KAAK,CAAC,KAAK,KAAK,KAAK,GAAG,CAAC,CAAC;AAAA,EAC1C;AAAA,EACA,KAAK,GAAG,GAAG,OAAO,QAAQ;AACxB,SAAK,SAAS,KAAK,CAAC,KAAK,GAAG,GAAG,OAAO,MAAM,CAAC;AAAA,EAC/C;AAAA,EACA,UAAU,GAAG,GAAG,OAAO,QAAQ,OAAO;AACpC,QAAI,OAAO,UAAU,aAAa;AAChC,WAAK,SAAS,KAAK,CAAC,MAAM,GAAG,GAAG,OAAO,QAAQ,CAAC,CAAC;AAAA,IACnD,OAAO;AACL,WAAK,SAAS,KAAK,CAAC,MAAM,GAAG,GAAG,OAAO,QAAQ,KAAK,CAAC;AAAA,IACvD;AAAA,EACF;AACF;AACA,SAAS,UAAU,KAAK,UAAU;AAChC,MAAI,IAAI;AACR,MAAI,IAAI;AACR,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI,MAAM;AACV,MAAI,MAAM;AACV,MAAI,OAAO;AACX,MAAI,OAAO;AACX,MAAI,aAAa;AACjB,MAAI,eAAe;AACnB,MAAI,UAAU;AACd,WAAS,IAAI,GAAG,IAAI,SAAS,QAAQ,EAAE,GAAG;AACxC,eAAW,SAAS,CAAC,EAAE,CAAC;AACxB,QAAI,aAAa,OAAO,aAAa,OAAO,aAAa,OAAO,aAAa,KAAK;AAChF,YAAM;AACN,YAAM;AAAA,IACR;AACA,QAAI,aAAa,OAAO,aAAa,OAAO,aAAa,OAAO,aAAa,KAAK;AAChF,aAAO;AACP,aAAO;AAAA,IACT;AACA,QAAI;AACJ,YAAQ,UAAU;AAAA,MAChB,KAAK;AAAA,MACL,KAAK;AACH,YAAI,SAAS,CAAC;AACd,YAAI,aAAa,KAAK;AACpB,eAAK,EAAE,CAAC;AACR,eAAK,EAAE,CAAC;AAAA,QACV,OAAO;AACL,cAAI,EAAE,CAAC;AACP,cAAI,EAAE,CAAC;AAAA,QACT;AACA,YAAI,aAAa,OAAO,CAAC,YAAY;AACnC,uBAAa,EAAE,GAAG,EAAE;AAAA,QACtB;AACA,YAAI,OAAO,GAAG,CAAC;AACf;AAAA,MACF,KAAK;AACH,YAAI,SAAS,CAAC;AACd,aAAK,EAAE,CAAC;AACR,aAAK,EAAE,CAAC;AACR,YAAI,OAAO,GAAG,CAAC;AACf;AAAA,MACF,KAAK;AACH,YAAI,SAAS,CAAC;AACd,YAAI,EAAE,CAAC;AACP,YAAI,EAAE,CAAC;AACP,YAAI,OAAO,GAAG,CAAC;AACf;AAAA,MACF,KAAK;AACH,YAAI,SAAS,CAAC;AACd,YAAI,EAAE,CAAC;AACP,YAAI,OAAO,GAAG,CAAC;AACf;AAAA,MACF,KAAK;AACH,YAAI,SAAS,CAAC;AACd,aAAK,EAAE,CAAC;AACR,YAAI,OAAO,GAAG,CAAC;AACf;AAAA,MACF,KAAK;AACH,YAAI,SAAS,CAAC;AACd,YAAI,EAAE,CAAC;AACP,YAAI,OAAO,GAAG,CAAC;AACf;AAAA,MACF,KAAK;AACH,YAAI,SAAS,CAAC;AACd,aAAK,EAAE,CAAC;AACR,YAAI,OAAO,GAAG,CAAC;AACf;AAAA,MACF,KAAK;AAAA,MACL,KAAK;AACH,YAAI,SAAS,CAAC;AACd,YAAI,iBAAiB,MAAM;AACzB,gBAAM,IAAI,MAAM,0BAA0B;AAAA,QAC5C;AACA,YAAI,aAAa,KAAK;AACpB,eAAK,EAAE,CAAC;AACR,eAAK,EAAE,CAAC;AAAA,QACV,OAAO;AACL,cAAI,EAAE,CAAC;AACP,cAAI,EAAE,CAAC;AAAA,QACT;AACA,aAAK,EAAE,CAAC;AACR,aAAK,EAAE,CAAC;AACR,gBAAQ,EAAE,CAAC,IAAI,KAAK,KAAK;AACzB,uBAAe,CAAC,CAAC,EAAE,CAAC;AACpB,oBAAY,CAAC,CAAC,EAAE,CAAC;AACjB,mBAAW,EAAE,GAAG,EAAE;AAClB,mBAAW;AAAA,UACT,IAAI,aAAa,IAAI,SAAS,KAAK;AAAA,UACnC,IAAI,aAAa,IAAI,SAAS,KAAK;AAAA,QACrC;AACA,oBAAY,UAAU,CAAC,KAAK;AAC5B,iBAAS,SAAS,IAAI,SAAS,KAAK,KAAK,MAAM,SAAS,IAAI,SAAS,KAAK,KAAK;AAC/E,YAAI,SAAS,GAAG;AACd,mBAAS,KAAK,KAAK,MAAM;AACzB,gBAAM;AACN,gBAAM;AAAA,QACR;AACA,sBAAc;AAAA,UACZ,GAAG,KAAK,SAAS,IAAI;AAAA,UACrB,GAAG,EAAE,KAAK,SAAS,KAAK;AAAA,QAC1B;AACA,aAAK,KAAK,KAAK,KAAK;AACpB,aAAK,KAAK,KAAK,SAAS,IAAI,SAAS,IAAI,KAAK,KAAK,SAAS,IAAI,SAAS;AACzE,YAAI,cAAc,cAAc;AAC9B,qBAAW,aAAa,KAAK,MAAM,KAAK,MAAM,EAAE,KAAK,CAAC;AAAA,QACxD,OAAO;AACL,qBAAW,aAAa,CAAC,KAAK,MAAM,KAAK,MAAM,EAAE,KAAK,CAAC;AAAA,QACzD;AACA,qBAAa,KAAK,OAAO,SAAS,IAAI,YAAY,KAAK,KAAK,SAAS,IAAI,YAAY,KAAK,EAAE;AAC5F,mBAAW,KAAK,MAAM,EAAE,SAAS,IAAI,YAAY,KAAK,IAAI,EAAE,SAAS,IAAI,YAAY,KAAK,EAAE;AAC5F,oBAAY,aAAa,KAAK;AAC9B,uBAAe,cAAc,SAAS,IAAI,aAAa,KAAK,IAAI,SAAS,IAAI,aAAa,KAAK,CAAC;AAChG,YAAI,KAAK;AACT,YAAI,UAAU,YAAY,GAAG,YAAY,CAAC;AAC1C,YAAI,OAAO,KAAK;AAChB,YAAI,MAAM,IAAI,EAAE;AAChB,YAAI,IAAI,GAAG,GAAG,GAAG,YAAY,UAAU,CAAC,SAAS;AACjD,YAAI,QAAQ;AACZ;AAAA,MACF,KAAK;AACH,YAAI,SAAS,CAAC;AACd,cAAM,EAAE,CAAC;AACT,cAAM,EAAE,CAAC;AACT,YAAI,EAAE,CAAC;AACP,YAAI,EAAE,CAAC;AACP,YAAI,cAAc,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,KAAK,KAAK,GAAG,CAAC;AAC5C;AAAA,MACF,KAAK;AACH,YAAI,SAAS,CAAC;AACd,YAAI,cAAc,EAAE,CAAC,IAAI,GAAG,EAAE,CAAC,IAAI,GAAG,EAAE,CAAC,IAAI,GAAG,EAAE,CAAC,IAAI,GAAG,EAAE,CAAC,IAAI,GAAG,EAAE,CAAC,IAAI,CAAC;AAC5E,cAAM,EAAE,CAAC,IAAI;AACb,cAAM,EAAE,CAAC,IAAI;AACb,aAAK,EAAE,CAAC;AACR,aAAK,EAAE,CAAC;AACR;AAAA,MACF,KAAK;AACH,YAAI,SAAS,CAAC;AACd,YAAI,QAAQ,QAAQ,QAAQ,MAAM;AAChC,gBAAM;AACN,gBAAM;AAAA,QACR;AACA,YAAI,cAAc,IAAI,IAAI,KAAK,IAAI,IAAI,KAAK,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC;AAClE,cAAM,EAAE,CAAC;AACT,cAAM,EAAE,CAAC;AACT,YAAI,EAAE,CAAC;AACP,YAAI,EAAE,CAAC;AACP;AAAA,MACF,KAAK;AACH,YAAI,SAAS,CAAC;AACd,YAAI,QAAQ,QAAQ,QAAQ,MAAM;AAChC,gBAAM;AACN,gBAAM;AAAA,QACR;AACA,YAAI,cAAc,IAAI,IAAI,KAAK,IAAI,IAAI,KAAK,EAAE,CAAC,IAAI,GAAG,EAAE,CAAC,IAAI,GAAG,EAAE,CAAC,IAAI,GAAG,EAAE,CAAC,IAAI,CAAC;AAClF,cAAM,EAAE,CAAC,IAAI;AACb,cAAM,EAAE,CAAC,IAAI;AACb,aAAK,EAAE,CAAC;AACR,aAAK,EAAE,CAAC;AACR;AAAA,MACF,KAAK;AACH,YAAI,SAAS,CAAC;AACd,eAAO,EAAE,CAAC;AACV,eAAO,EAAE,CAAC;AACV,YAAI,EAAE,CAAC;AACP,YAAI,EAAE,CAAC;AACP,YAAI,iBAAiB,MAAM,MAAM,GAAG,CAAC;AACrC;AAAA,MACF,KAAK;AACH,YAAI,SAAS,CAAC;AACd,eAAO,EAAE,CAAC,IAAI;AACd,eAAO,EAAE,CAAC,IAAI;AACd,aAAK,EAAE,CAAC;AACR,aAAK,EAAE,CAAC;AACR,YAAI,iBAAiB,MAAM,MAAM,GAAG,CAAC;AACrC;AAAA,MACF,KAAK;AACH,YAAI,SAAS,CAAC;AACd,YAAI,SAAS,QAAQ,SAAS,MAAM;AAClC,iBAAO;AACP,iBAAO;AAAA,QACT;AACA,eAAO,IAAI,IAAI;AACf,eAAO,IAAI,IAAI;AACf,YAAI,EAAE,CAAC;AACP,YAAI,EAAE,CAAC;AACP,YAAI,iBAAiB,MAAM,MAAM,GAAG,CAAC;AACrC;AAAA,MACF,KAAK;AACH,YAAI,SAAS,CAAC;AACd,YAAI,SAAS,QAAQ,SAAS,MAAM;AAClC,iBAAO;AACP,iBAAO;AAAA,QACT;AACA,eAAO,IAAI,IAAI;AACf,eAAO,IAAI,IAAI;AACf,aAAK,EAAE,CAAC;AACR,aAAK,EAAE,CAAC;AACR,YAAI,iBAAiB,MAAM,MAAM,GAAG,CAAC;AACrC;AAAA,MACF,KAAK;AAAA,MACL,KAAK;AACH,YAAI,YAAY;AACd,cAAI,WAAW;AACf,cAAI,WAAW;AAAA,QACjB;AACA,qBAAa;AACb,YAAI,UAAU;AACd;AAAA,MACF,KAAK;AACH,YAAI,SAAS,CAAC;AACd,YAAI,EAAE,CAAC;AACP,YAAI,EAAE,CAAC;AACP,YAAI,EAAE,CAAC;AACP,qBAAa,EAAE,CAAC;AAChB,mBAAW,EAAE,CAAC;AACd,cAAM,EAAE,CAAC;AACT,YAAI,IAAI,GAAG,GAAG,GAAG,YAAY,UAAU,GAAG;AAC1C;AAAA,MACF,KAAK;AACH,YAAI,SAAS,CAAC;AACd,aAAK,EAAE,CAAC;AACR,aAAK,EAAE,CAAC;AACR,YAAI,EAAE,CAAC;AACP,YAAI,EAAE,CAAC;AACP,YAAI,EAAE,CAAC;AACP,YAAI,MAAM,IAAI,IAAI,GAAG,GAAG,CAAC;AACzB;AAAA,MACF,KAAK;AACH,YAAI,SAAS,CAAC;AACd,YAAI,EAAE,CAAC;AACP,YAAI,EAAE,CAAC;AACP,aAAK,EAAE,CAAC;AACR,aAAK,EAAE,CAAC;AACR,gBAAQ,EAAE,CAAC;AACX,qBAAa,EAAE,CAAC;AAChB,mBAAW,EAAE,CAAC;AACd,cAAM,EAAE,CAAC;AACT,YAAI,KAAK;AACT,YAAI,UAAU,GAAG,CAAC;AAClB,YAAI,OAAO,KAAK;AAChB,YAAI,MAAM,IAAI,EAAE;AAChB,YAAI,IAAI,GAAG,GAAG,GAAG,YAAY,UAAU,GAAG;AAC1C,YAAI,QAAQ;AACZ;AAAA,MACF,KAAK;AACH,YAAI,SAAS,CAAC;AACd,YAAI,EAAE,CAAC;AACP,YAAI,EAAE,CAAC;AACP,YAAI,EAAE,CAAC;AACP,YAAI,EAAE,CAAC;AACP,qBAAa,EAAE,GAAG,EAAE;AACpB,YAAI,KAAK,GAAG,GAAG,GAAG,CAAC;AACnB;AAAA,MACF,KAAK;AACH,YAAI,SAAS,CAAC;AACd,YAAI,EAAE,CAAC;AACP,YAAI,EAAE,CAAC;AACP,YAAI,EAAE,CAAC;AACP,YAAI,EAAE,CAAC;AACP,gBAAQ,EAAE,CAAC;AACX,qBAAa,EAAE,GAAG,EAAE;AACpB,YAAI,UAAU,GAAG,GAAG,GAAG,GAAG,KAAK;AAC/B;AAAA,MACF;AACE,cAAM,IAAI,MAAM,yBAAyB,QAAQ,EAAE;AAAA,IACvD;AACA,QAAI,CAAC,cAAc;AACjB,qBAAe,EAAE,GAAG,EAAE;AAAA,IACxB,OAAO;AACL,mBAAa,IAAI;AACjB,mBAAa,IAAI;AAAA,IACnB;AAAA,EACF;AACF;AAGA,SAAS,UAAU,GAAG,GAAG,OAAO,QAAQ,QAAQ,GAAG;AACjD,MAAI,OAAO,UAAU,UAAU;AAC7B,YAAQ,CAAC,KAAK;AAAA,EAChB;AACA,MAAI,MAAM,QAAQ,KAAK,GAAG;AACxB,QAAI,MAAM,WAAW,KAAK,MAAM,SAAS,GAAG;AAC1C,YAAM,IAAI;AAAA,QACR,qCAAqC,KAAK,YAAY,IAAI,MAAM,MAAM,MAAM;AAAA,MAC9E;AAAA,IACF;AACA,UAAM,QAAQ,CAAC,MAAM;AACnB,UAAI,IAAI,GAAG;AACT,cAAM,IAAI;AAAA,UACR,qCAAqC,KAAK,YAAY,IAAI,mBAAmB,CAAC;AAAA,QAChF;AAAA,MACF;AAAA,IACF,CAAC;AAAA,EACH,OAAO;AACL;AAAA,EACF;AACA,MAAI,MAAM,WAAW,KAAK,MAAM,CAAC,MAAM,GAAG;AACxC,SAAK,KAAK,GAAG,GAAG,OAAO,MAAM;AAC7B;AAAA,EACF;AACA,QAAM,YAAY,KAAK,IAAI,OAAO,MAAM,IAAI;AAC5C,QAAM,KAAK,KAAK,IAAI,WAAW,MAAM,CAAC,CAAC;AACvC,MAAI,KAAK;AACT,MAAI,KAAK;AACT,MAAI,KAAK;AACT,MAAI,MAAM,WAAW,GAAG;AACtB,SAAK,KAAK,IAAI,WAAW,MAAM,CAAC,CAAC;AACjC,SAAK;AAAA,EACP;AACA,MAAI,MAAM,WAAW,GAAG;AACtB,SAAK,KAAK,IAAI,WAAW,MAAM,CAAC,CAAC;AACjC,SAAK;AACL,SAAK,KAAK,IAAI,WAAW,MAAM,CAAC,CAAC;AAAA,EACnC;AACA,MAAI,MAAM,WAAW,GAAG;AACtB,SAAK,KAAK,IAAI,WAAW,MAAM,CAAC,CAAC;AACjC,SAAK,KAAK,IAAI,WAAW,MAAM,CAAC,CAAC;AACjC,SAAK,KAAK,IAAI,WAAW,MAAM,CAAC,CAAC;AAAA,EACnC;AACA,OAAK,OAAO,GAAG,IAAI,SAAS,EAAE;AAC9B,OAAK,MAAM,GAAG,GAAG,IAAI,IAAI,GAAG,EAAE;AAC9B,OAAK,MAAM,IAAI,OAAO,GAAG,IAAI,OAAO,IAAI,IAAI,EAAE;AAC9C,OAAK,MAAM,IAAI,OAAO,IAAI,QAAQ,IAAI,QAAQ,IAAI,IAAI,QAAQ,EAAE;AAChE,OAAK,MAAM,GAAG,IAAI,QAAQ,GAAG,IAAI,SAAS,IAAI,EAAE;AAChD,OAAK,OAAO,GAAG,CAAC;AAClB;AAGA,SAAS,oCAAoC,0BAA0B;AACrE,MAAI,CAAC,yBAA0B;AAC/B,QAAM,QAAQ,yBAAyB,UAAU;AACjD,QAAM,QAAQ,yBAAyB,UAAU;AACjD,QAAM,UAAU,yBAAyB,UAAU;AACnD,QAAM,iBAAiB,yBAAyB,UAAU;AAC1D,2BAAyB,UAAU,OAAO,SAAS,QAAQ,MAAM;AAC/D,QAAI,KAAK,CAAC,aAAa,QAAQ;AAC7B,YAAM,OAAO,KAAK,CAAC;AACnB,YAAM,YAAY,KAAK,CAAC,KAAK;AAC7B,gBAAU,MAAM,KAAK,QAAQ;AAC7B,aAAO,MAAM,MAAM,MAAM,CAAC,SAAS,CAAC;AAAA,IACtC;AACA,UAAM,WAAW,KAAK,CAAC,KAAK;AAC5B,WAAO,MAAM,MAAM,MAAM,CAAC,QAAQ,CAAC;AAAA,EACrC;AACA,2BAAyB,UAAU,OAAO,SAAS,QAAQ,MAAM;AAC/D,QAAI,KAAK,CAAC,aAAa,QAAQ;AAC7B,YAAM,OAAO,KAAK,CAAC;AACnB,YAAM,YAAY,KAAK,CAAC,KAAK;AAC7B,gBAAU,MAAM,KAAK,QAAQ;AAC7B,aAAO,MAAM,MAAM,MAAM,CAAC,SAAS,CAAC;AAAA,IACtC;AACA,UAAM,WAAW,KAAK,CAAC,KAAK;AAC5B,WAAO,MAAM,MAAM,MAAM,CAAC,QAAQ,CAAC;AAAA,EACrC;AACA,2BAAyB,UAAU,SAAS,SAAS,OAAO,MAAM;AAChE,QAAI,MAAM;AACR,gBAAU,MAAM,KAAK,QAAQ;AAAA,IAC/B;AACA,YAAQ,MAAM,IAAI;AAAA,EACpB;AACA,2BAAyB,UAAU,gBAAgB,SAAS,iBAAiB,MAAM;AACjF,QAAI,KAAK,CAAC,aAAa,QAAQ;AAC7B,YAAM,OAAO,KAAK,CAAC;AACnB,YAAM,IAAI,KAAK,CAAC;AAChB,YAAM,IAAI,KAAK,CAAC;AAChB,YAAM,WAAW,KAAK,CAAC,KAAK;AAC5B,gBAAU,MAAM,KAAK,QAAQ;AAC7B,aAAO,eAAe,MAAM,MAAM,CAAC,GAAG,GAAG,QAAQ,CAAC;AAAA,IACpD;AACA,WAAO,eAAe,MAAM,MAAM,IAAI;AAAA,EACxC;AACF;AACA,SAAS,yCAAyC,0BAA0B;AAC1E,MAAI,4BAA4B,CAAC,yBAAyB,UAAU,WAAW;AAC7E,6BAAyB,UAAU,YAAY;AAAA,EACjD;AACF;AACA,SAAS,uBAAuB,KAAK;AACnC,MAAI,OAAO,CAAC,IAAI,UAAU,WAAW;AACnC,QAAI,UAAU,YAAY;AAAA,EAC5B;AACF;",
  "names": []
}
